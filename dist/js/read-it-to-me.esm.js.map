{"version":3,"file":"read-it-to-me.esm.js","sources":["../../src/js/utils.js","../../src/js/read-it-to-me.js","../../src/js/events.js","../../src/js/synthesis.js","../../src/js/react.js","../../src/js/control-bar.js","../../src/js/group.js","../../src/js/index.js","../../src/js/dom.js"],"sourcesContent":["export const ritmDisabledClassName = 'ritm-disabled';\nexport const groupClassName = 'read-it-to-me-content-group';\nexport const focusClassName = 'focusin';\n\nexport const PLAYING_STATE = {\n  STOPPED: 0,\n  PAUSED: 1,\n  PLAYING: 2\n};\n\nexport let getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};","import {initSynthesis} from './synthesis';\nimport {initEventTracking} from './events';\nimport {PLAYING_STATE, focusClassName} from './utils';\n\nlet synth;\nlet ui;\nlet ritmEnabled = true;\nconst {eventsBin, setHandlers} = initEventTracking();\n\nlet setup = (uiConfig) => {\n  ui = uiConfig;\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nexport let setReadItToMe = (enabled, logEvent) => {\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n  }\n\n  ui.setReadItToMe(ritmEnabled);\n\n  // optional track toggle event\n  if (logEvent) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nexport let cancelAudio = toFocus => function() {\n  // optional track cancel event\n  eventsBin.cancel(synth.currentUtterance && synth.currentUtterance.config.group.ritmOptionalTrackingIdentifier);\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  synth.cancel();\n};\n\nexport let playPauseGroup = (group) => {\n  if (synth.currentUtterance && synth.currentUtterance.config.group === group && group.state !== PLAYING_STATE.STOPPED) {\n    if (group.state === PLAYING_STATE.PAUSED) {\n      synth.resume();\n    } else if (group.state === PLAYING_STATE.PLAYING) {\n      synth.pause();\n    }\n  } else {\n    // setup the new utterance\n    const config = {text: group.text(), group, playTracked: false};\n\n    synth.play(config, utteranceUpdated);\n  }\n};\n\nlet utteranceUpdated = (e, state, config) => {\n  config.group.setState(state);\n\n  if (state === PLAYING_STATE.STOPPED) {\n    ui.hideControlBar();\n    ui.hideCancelButton();\n  } else {\n    ui.showControlBar();\n    ui.showCancelButton();\n  }\n\n  if (state === PLAYING_STATE.PLAYING) {\n    if (!config.playTracked) {\n      eventsBin.play(config.group.ritmOptionalTrackingIdentifier);\n      config.playTracked = true;\n    }\n  } else if (state === PLAYING_STATE.PAUSED) {\n    eventsBin.pause(config.group.ritmOptionalTrackingIdentifier);\n  }\n};\n\nexport function init(setupUI, callback) {\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      const config = setupUI();\n\n      if (!(config && config.hideControlBar && config.hideCancelButton && config.showCancelButton && config.showControlBar && config.setReadItToMe)) {\n        error = new Error('UI library did not provide necessary callbacks.');\n      } else {\n        setup(config);\n      }\n    }\n\n    callback(error);\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  return (synth.currentUtterance && synth.currentUtterance.config.group.ritmOptionalTrackingIdentifier) || false;\n}\n\nexport const eventTracking = setHandlers;","function nullEvent() {}\n\nfunction eventHandlerWrapper(handler) {\n  return event => {\n    try {\n      handler(event);\n    } catch (e) {}\n  };\n}\n\nexport function initEventTracking() {\n  const eventsBin = {\n    play: nullEvent,\n    pause: nullEvent,\n    cancel: nullEvent,\n    toggle: nullEvent\n  };\n\n  function setHandlers(obj) {\n    if (obj) {\n      if (obj.play && typeof obj.play === 'function') {\n        eventsBin.play = eventHandlerWrapper(obj.play);\n      }\n      if (obj.pause && typeof obj.pause === 'function') {\n        eventsBin.pause = eventHandlerWrapper(obj.pause);\n      }\n      if (obj.cancel && typeof obj.cancel === 'function') {\n        eventsBin.cancel = eventHandlerWrapper(obj.cancel);\n      }\n      if (obj.toggle && typeof obj.toggle === 'function') {\n        eventsBin.toggle = eventHandlerWrapper(obj.toggle);\n      }\n    }\n  }\n\n  return {eventsBin, setHandlers};\n}","import {PLAYING_STATE} from './utils';\n\nexport function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    result.nextUttarance = {u, config, callback};\n\n    if (!result.currentUtterance) {\n      playNextUtterance();\n    } else {\n      synth.cancel();\n    }\n  };\n\n  let playNextUtterance = () => {\n    const thisUtterance = result.currentUtterance = result.nextUttarance;\n    result.nextUttarance = null;\n\n    function utteranceFinished(error) {\n      thisUtterance.callback(error, PLAYING_STATE.STOPPED, thisUtterance.config);\n      if (result.nextUttarance) {\n        playNextUtterance();\n      } else {\n        result.currentUtterance = null;\n      }\n    }\n\n    thisUtterance.u.onend = () => setTimeout(utteranceFinished, 100);\n\n    thisUtterance.u.onerror = event => setTimeout(utteranceFinished.bind(null, event.error || new Error('Unknown speech synthesis error')), 100);\n\n    thisUtterance.u.onstart = () => thisUtterance.callback(null, PLAYING_STATE.PLAYING, thisUtterance.config);\n\n    thisUtterance.u.onpause = () => thisUtterance.callback(null, PLAYING_STATE.PAUSED, thisUtterance.config);\n\n    thisUtterance.u.onresume = () => thisUtterance.callback(null, PLAYING_STATE.PLAYING, thisUtterance.config);\n\n    // speak the new utterance\n    synth.speak(thisUtterance.u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n","import {playPauseGroup, cancelAudio, setReadItToMe, init as initRITM, isEnabled, eventTracking} from './read-it-to-me';\nimport {createControlBar} from './control-bar';\nimport {createRITMGroup} from './group';\nimport {getPlainTextWithPsuedoSemantics, groupClassName, focusClassName, ritmDisabledClassName} from './utils';\n\nimport React from 'react';\n\nexport let ControlContext;\nexport let ContentGroup;\n\nif (typeof React !== 'undefined') {\n  const Context = React.createContext(true);\n  ControlContext = class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        ritm: false,\n        onGroupMounted: this.onGroupMounted.bind(this)\n      };\n    }\n\n    onGroupMounted() {\n      if (this.initialized) {\n        return;\n      }\n      this.initialized = true;\n\n      initRITM(() => {\n        this.controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n\n        return {\n          hideControlBar: this.controlBar.hideControlBar,\n          hideCancelButton: this.controlBar.hideCancelButton,\n          showCancelButton: this.controlBar.showCancelButton,\n          showControlBar: this.controlBar.showControlBar,\n          setReadItToMe: this.uiSetReadItToMe.bind(this)\n        };\n      }, err => {\n        if (!err && isEnabled()) {\n          this.setState({ritm: isEnabled()});\n        }\n      });\n\n      eventTracking({\n        play: this.onPlay.bind(this),\n        pause: this.onPause.bind(this),\n        cancel: this.onCancel.bind(this),\n        toggle: this.onToggle.bind(this)\n      });\n    }\n\n    onPlay() {\n      if (this.props.onPlay) {\n        this.props.onPlay(...arguments);\n      }\n    }\n    onPause() {\n      if (this.props.onPause) {\n        this.props.onPause(...arguments);\n      }\n    }\n\n    onCancel() {\n      if (this.props.onCancel) {\n        this.props.onCancel(...arguments);\n      }\n    }\n\n    onToggle() {\n      if (this.props.onToggle) {\n        this.props.onToggle(...arguments);\n      }\n    }\n\n\n    uiSetReadItToMe(ritm) {\n      if (this.controlBar) {\n        this.controlBar.setReadItToMe(ritm);\n      }\n      this.setState({ritm});\n    }\n\n    componentWillUnmount() {\n      if (typeof console !== 'undefined') {\n        console.error('Having the Read-it-to-Me Control Context unmount may cause unexpected side effects.')\n      }\n    }\n\n    render() {\n      return React.createElement(Context.Provider, {value: this.state}, this.props.children);\n    }\n  };\n\n  ContentGroup = class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.componentRender = this.componentRender.bind(this);\n    }\n\n    componentRender({ritm: ritmState, onGroupMounted}) {\n      return React.createElement(ContentGroupComponent, {...this.props, ritmState, onGroupMounted}, this.props.children);\n    }\n\n    render() {\n      return React.createElement(Context.Consumer, {}, this.componentRender);\n    }\n  };\n\n  class ContentGroupComponent extends React.Component {\n    componentDidMount() {\n      const ritmOptionalTrackingIdentifier = this.props.trackingIdentifier; // TODO: Recreate group when this changes?\n\n      const text = () => getPlainTextWithPsuedoSemantics(this.wrapperElement);\n      this.ritmGroup = createRITMGroup(\n        {playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem: this.elem, ritmOptionalTrackingIdentifier, text},\n        {wrapperElement: this.wrapperElement, controlBubbleElement: this.controlBubbleElement}\n      );\n      this.ritmGroup.setReadItToMe(this.props.ritmState);\n\n      this.props.onGroupMounted();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.ritmState !== this.props.ritmState) {\n        this.ritmGroup.setReadItToMe(this.props.ritmState);\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.ritmGroup) {\n        this.ritmGroup.destroy();\n        this.ritmGroup = null;\n      }\n    }\n\n    render() {\n      return React.createElement('div', {className: groupClassName, ref: elem => this.elem = elem},\n        React.createElement('div', {ref: controlBubbleElement => this.controlBubbleElement = controlBubbleElement}),\n        React.createElement('div', {className: 'read-this-to-me', ref: wrapperElement => this.wrapperElement = wrapperElement}, this.props.children)\n      );\n    }\n  }\n}","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","import {PLAYING_STATE} from './utils';\n\nexport function createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, ritmOptionalTrackingIdentifier, elem, text}, {wrapperElement, controlBubbleElement, document}) {\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapper = wrapperElement || document.createElement('div');\n  wrapper.classList.add('read-this-to-me');\n\n  if (!wrapperElement) {\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n  }\n\n  // build the control bubble\n  const controlBubble = controlBubbleElement || document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const pausePlayButton = controlBubble.querySelector('button.play-pause-resume');\n  const cancelButton = controlBubble.querySelector('button.cancel-audio');\n\n  const focusInListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.add(focusClassName);\n  };\n\n  const focusOutListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.remove(focusClassName);\n  };\n\n  const playPauseListener = e => {\n    e.stopPropagation();\n    playPauseGroup(group);\n  };\n\n  const cancelListener = cancelAudio(controlBubble);\n\n  const setReadItToMe = enabled => {\n    if (enabled) {\n      elem.classList.remove(ritmDisabledClassName);\n    }\n    else {\n      elem.classList.add(ritmDisabledClassName);\n    }\n    pausePlayButton.disabled = !enabled;\n    cancelButton.disabled = !enabled;\n  };\n\n  const setState = state => {\n    group.state = state;\n\n    if (state === PLAYING_STATE.STOPPED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PLAYING) {\n      elem.classList.add('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PAUSED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.add('read-it-to-me-pause');\n    }\n  };\n\n  const destroy = () => {\n    controlBubble.removeEventListener('focusin', focusInListener);\n    controlBubble.removeEventListener('focusout', focusOutListener);\n    pausePlayButton.removeEventListener('click', playPauseListener);\n    cancelButton.removeEventListener('click', cancelListener);\n  };\n\n  controlBubble.addEventListener('focusin', focusInListener);\n  controlBubble.addEventListener('focusout', focusOutListener);\n  pausePlayButton.addEventListener('click', playPauseListener);\n  cancelButton.addEventListener('click', cancelListener);\n\n  if (!controlBubbleElement) {\n    elem.insertBefore(controlBubble, wrapper);\n  }\n\n  const group = {\n    setReadItToMe,\n    setState,\n    state: PLAYING_STATE.STOPPED,\n    destroy,\n    text,\n    ritmOptionalTrackingIdentifier\n  };\n\n  return group;\n}","import '../scss/read-it-to-me.scss';\n\nimport * as ritm from './read-it-to-me';\nimport {init as domInit} from './dom';\nimport * as ritmReact from './react';\n\nexport const initRITM = ritm.init;\nexport const isEnabled = ritm.isEnabled;\nexport const currentUtteranceIdentifier = ritm.currentUtteranceIdentifier;\nexport const eventTracking = ritm.eventTracking;\n\nexport const ControlContext = ritmReact.ControlContext;\nexport const ContentGroup = ritmReact.ContentGroup;\n\nexport function init(selectors) {\n  return domInit(ritm.init, selectors);\n}","import {playPauseGroup, cancelAudio, setReadItToMe} from './read-it-to-me';\nimport {createControlBar} from './control-bar';\nimport {createRITMGroup} from './group';\nimport {getPlainTextWithPsuedoSemantics, groupClassName, focusClassName, ritmDisabledClassName} from './utils';\n\nexport function init(initRITM, selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  function setupUI() {\n    // if custom selectors were passed in, give the associated elements the default group class\n    if (selectors && document.querySelectorAll(selectors).length > 0) {\n      document.querySelectorAll(selectors).forEach((elem) => {\n        elem.classList.add(groupClassName);\n      });\n    }\n\n    let controlBar;\n    let contentGroups = [];\n\n    const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n    groupSelectorElements.forEach((elem) => {\n      const text = () => getPlainTextWithPsuedoSemantics(elem.querySelector('.read-this-to-me'));\n      const ritmOptionalTrackingIdentifier = elem.dataset.ritmOptionalTrackingIdentifier || false;\n      const group = createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem, ritmOptionalTrackingIdentifier, text}, {document});\n\n      contentGroups.push(group);\n    });\n\n    // build the control bar\n    controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n\n    function uiSetReadItToMe(enabled) {\n      controlBar.setReadItToMe(enabled);\n      contentGroups.forEach(group => group.setReadItToMe(enabled));\n    }\n\n    return {\n      hideControlBar: controlBar.hideControlBar,\n      hideCancelButton: controlBar.hideCancelButton,\n      showCancelButton: controlBar.showCancelButton,\n      showControlBar: controlBar.showControlBar,\n      setReadItToMe: uiSetReadItToMe\n    }\n  }\n\n  initRITM(setupUI, error => {\n    if (error) {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}"],"names":["synth","ui","ritmDisabledClassName","groupClassName","focusClassName","PLAYING_STATE","STOPPED","PAUSED","PLAYING","getPlainTextWithPsuedoSemantics","textAncestor","clonedTextAncestor","cloneNode","querySelectorAll","forEach","elem","tag","tagName","toUpperCase","appendChild","document","createTextNode","arr","textContent","split","join","insertBefore","firstChild","nullEvent","eventHandlerWrapper","handler","event","e","ritmEnabled","eventsBin","play","pause","cancel","toggle","setHandlers","obj","initEventTracking","setup","uiConfig","sessionStorage","getItem","setReadItToMe","enabled","logEvent","strayFocus","removeItem","querySelector","classList","remove","setItem","cancelAudio","toFocus","currentUtterance","config","group","ritmOptionalTrackingIdentifier","contains","this","focus","playPauseGroup","state","resume","text","playTracked","utteranceUpdated","setState","hideControlBar","hideCancelButton","showControlBar","showCancelButton","init","setupUI","callback","voices","failedToLoadVoices","speechSynthesis","playNextUtterance","thisUtterance","result","nextUttarance","utteranceFinished","error","u","onend","setTimeout","onerror","bind","Error","onstart","onpause","onresume","speak","SpeechSynthesisUtterance","lang","rate","length","i","indexOf","name","voice","getVoices","undefined","onvoiceschanged","initSynthesis","synthesis","isEnabled","ControlContext","ContentGroup","eventTracking","createControlBar","controlBarElement","controlBar","createElement","add","setAttribute","innerHTML","cancelButton","inputSwitch","addEventListener","target","checked","relatedTarget","docBody","body","status","createRITMGroup","wrapperElement","controlBubbleElement","wrapper","controlBubble","tabIndex","pausePlayButton","focusInListener","stopPropagation","focusOutListener","playPauseListener","cancelListener","disabled","destroy","removeEventListener","React","Context","createContext","props","ritm","onGroupMounted","_this","Component","initialized","initRITM","_this2","uiSetReadItToMe","err","onPlay","onPause","onCancel","onToggle","arguments","console","Provider","value","children","componentRender","_this3","ritmState","ContentGroupComponent","Consumer","trackingIdentifier","ritmGroup","_this4","prevProps","prevState","snapshot","className","ref","_this5","currentUtteranceIdentifier","ritmReact","selectors","contentGroups","dataset","push","domInit"],"mappings":"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"}