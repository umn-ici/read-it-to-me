{"version":3,"file":"read-it-to-me.esm.js","sources":["../../src/js/utils.js","../../src/js/read-it-to-me.js","../../src/js/events.js","../../src/js/synthesis.js","../../src/js/react.js","../../src/js/control-bar.js","../../src/js/group.js","../../src/js/dom.js","../../src/js/index.js"],"sourcesContent":["export const ritmDisabledClassName = 'ritm-disabled';\nexport const groupClassName = 'read-it-to-me-content-group';\nexport const focusClassName = 'focusin';\n\nexport const PLAYING_STATE = {\n  STOPPED: 0,\n  PAUSED: 1,\n  PLAYING: 2\n};\n\nexport let getPlainTextWithPsuedoSemantics = (textAncestor, filterOutTheseSelectors) => {\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  const filterOutTheseSelectorsAndUI = filterOutTheseSelectors === '' ? '.read-it-to-me-control-bubble' : filterOutTheseSelectors + ', .read-it-to-me-control-bubble';\n\n  // Remove elements we don't want RITM reading\n  clonedTextAncestor.querySelectorAll(filterOutTheseSelectorsAndUI).forEach((elem) => {\n    elem.remove();\n  });\n\n  // Replace images with alt text with the alt text\n  clonedTextAncestor.querySelectorAll('img[alt]').forEach((elem) => {\n    const altText = elem.alt;\n    if (altText.length > 0) {\n      elem.replaceWith(`Image description begin. ${altText} Image description end.`);\n    }\n  });\n\n  // Pepper in some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};","import {initSynthesis} from './synthesis';\nimport {initEventTracking} from './events';\nimport {PLAYING_STATE, focusClassName} from './utils';\n\nlet synth;\nlet ui;\nlet ritmEnabled = true;\nconst {eventsBin, setHandlers} = initEventTracking();\n\nlet setup = (uiConfig) => {\n  ui = uiConfig;\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nexport let setReadItToMe = (enabled, logEvent) => {\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n  }\n\n  ui.setReadItToMe(ritmEnabled);\n\n  // optional track toggle event\n  if (logEvent) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nexport let cancelAudio = toFocus => function() {\n  // optional track cancel event\n  eventsBin.cancel(synth.currentUtterance && synth.currentUtterance.config.group.ritmOptionalTrackingIdentifier);\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  synth.cancel();\n};\n\nexport let playPauseGroup = (group) => {\n  if (synth.currentUtterance && synth.currentUtterance.config.group === group && group.state !== PLAYING_STATE.STOPPED) {\n    if (group.state === PLAYING_STATE.PAUSED) {\n      synth.resume();\n    } else if (group.state === PLAYING_STATE.PLAYING) {\n      synth.pause();\n    }\n  } else {\n    // setup the new utterance\n    const config = {text: group.text(), group, playTracked: false};\n\n    synth.play(config, utteranceUpdated);\n  }\n};\n\nlet utteranceUpdated = (e, state, config) => {\n  config.group.setState(state);\n\n  if (state === PLAYING_STATE.STOPPED) {\n    ui.hideControlBar();\n    ui.hideCancelButton();\n  } else {\n    ui.showControlBar();\n    ui.showCancelButton();\n  }\n\n  if (state === PLAYING_STATE.PLAYING) {\n    if (!config.playTracked) {\n      eventsBin.play(config.group.ritmOptionalTrackingIdentifier);\n      config.playTracked = true;\n    }\n  } else if (state === PLAYING_STATE.PAUSED) {\n    eventsBin.pause(config.group.ritmOptionalTrackingIdentifier);\n  }\n};\n\nexport function init(setupUI, callback) {\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      const config = setupUI();\n\n      if (!(config && config.hideControlBar && config.hideCancelButton && config.showCancelButton && config.showControlBar && config.setReadItToMe)) {\n        error = new Error('UI library did not provide necessary callbacks.');\n      } else {\n        setup(config);\n      }\n    }\n\n    callback(error);\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  return (synth.currentUtterance && synth.currentUtterance.config.group.ritmOptionalTrackingIdentifier) || false;\n}\n\nexport const eventTracking = setHandlers;","function nullEvent() {}\n\nfunction eventHandlerWrapper(handler) {\n  return event => {\n    try {\n      handler(event);\n    } catch (e) {}\n  };\n}\n\nexport function initEventTracking() {\n  const eventsBin = {\n    play: nullEvent,\n    pause: nullEvent,\n    cancel: nullEvent,\n    toggle: nullEvent\n  };\n\n  function setHandlers(obj) {\n    if (obj) {\n      if (obj.play && typeof obj.play === 'function') {\n        eventsBin.play = eventHandlerWrapper(obj.play);\n      }\n      if (obj.pause && typeof obj.pause === 'function') {\n        eventsBin.pause = eventHandlerWrapper(obj.pause);\n      }\n      if (obj.cancel && typeof obj.cancel === 'function') {\n        eventsBin.cancel = eventHandlerWrapper(obj.cancel);\n      }\n      if (obj.toggle && typeof obj.toggle === 'function') {\n        eventsBin.toggle = eventHandlerWrapper(obj.toggle);\n      }\n    }\n  }\n\n  return {eventsBin, setHandlers};\n}","import {PLAYING_STATE} from './utils';\n\nexport function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    result.nextUttarance = {u, config, callback};\n\n    if (!result.currentUtterance) {\n      playNextUtterance();\n    } else {\n      synth.cancel();\n    }\n  };\n\n  let playNextUtterance = () => {\n    const thisUtterance = result.currentUtterance = result.nextUttarance;\n    result.nextUttarance = null;\n\n    function utteranceFinished(error) {\n      thisUtterance.callback(error, PLAYING_STATE.STOPPED, thisUtterance.config);\n      if (result.nextUttarance) {\n        playNextUtterance();\n      } else {\n        result.currentUtterance = null;\n      }\n    }\n\n    thisUtterance.u.onend = () => setTimeout(utteranceFinished, 100);\n\n    thisUtterance.u.onerror = event => setTimeout(utteranceFinished.bind(null, event.error || new Error('Unknown speech synthesis error')), 100);\n\n    thisUtterance.u.onstart = () => thisUtterance.callback(null, PLAYING_STATE.PLAYING, thisUtterance.config);\n\n    thisUtterance.u.onpause = () => thisUtterance.callback(null, PLAYING_STATE.PAUSED, thisUtterance.config);\n\n    thisUtterance.u.onresume = () => thisUtterance.callback(null, PLAYING_STATE.PLAYING, thisUtterance.config);\n\n    // speak the new utterance\n    synth.speak(thisUtterance.u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n","import {playPauseGroup, cancelAudio, setReadItToMe, init as initRITM, isEnabled, eventTracking} from './read-it-to-me';\nimport {createControlBar} from './control-bar';\nimport {createRITMGroup} from './group';\nimport {getPlainTextWithPsuedoSemantics, groupClassName, focusClassName, ritmDisabledClassName} from './utils';\n\nimport React from 'react';\n\nexport let ControlContext;\nexport let ContentGroup;\n\nif (typeof React !== 'undefined') {\n  const Context = React.createContext(true);\n  ControlContext = class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        ritm: false,\n        onGroupMounted: this.onGroupMounted.bind(this)\n      };\n    }\n\n    onGroupMounted() {\n      if (this.initialized) {\n        return;\n      }\n      this.initialized = true;\n\n      initRITM(() => {\n        this.controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n\n        return {\n          hideControlBar: this.controlBar.hideControlBar,\n          hideCancelButton: this.controlBar.hideCancelButton,\n          showCancelButton: this.controlBar.showCancelButton,\n          showControlBar: this.controlBar.showControlBar,\n          setReadItToMe: this.uiSetReadItToMe.bind(this)\n        };\n      }, err => {\n        if (!err && isEnabled()) {\n          this.setState({ritm: isEnabled()});\n        }\n      });\n\n      eventTracking({\n        play: this.onPlay.bind(this),\n        pause: this.onPause.bind(this),\n        cancel: this.onCancel.bind(this),\n        toggle: this.onToggle.bind(this)\n      });\n    }\n\n    onPlay() {\n      if (this.props.onPlay) {\n        this.props.onPlay(...arguments);\n      }\n    }\n    onPause() {\n      if (this.props.onPause) {\n        this.props.onPause(...arguments);\n      }\n    }\n\n    onCancel() {\n      if (this.props.onCancel) {\n        this.props.onCancel(...arguments);\n      }\n    }\n\n    onToggle() {\n      if (this.props.onToggle) {\n        this.props.onToggle(...arguments);\n      }\n    }\n\n\n    uiSetReadItToMe(ritm) {\n      if (this.controlBar) {\n        this.controlBar.setReadItToMe(ritm);\n      }\n      this.setState({ritm});\n    }\n\n    componentWillUnmount() {\n      if (typeof console !== 'undefined') {\n        console.error('Having the Read-it-to-Me Control Context unmount may cause unexpected side effects.')\n      }\n    }\n\n    render() {\n      return React.createElement(Context.Provider, {value: this.state}, this.props.children);\n    }\n  };\n\n  ContentGroup = class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.componentRender = this.componentRender.bind(this);\n    }\n\n    componentRender({ritm: ritmState, onGroupMounted}) {\n      return React.createElement(ContentGroupComponent, {...this.props, ritmState, onGroupMounted}, this.props.children);\n    }\n\n    render() {\n      return React.createElement(Context.Consumer, {}, this.componentRender);\n    }\n  };\n\n  class ContentGroupComponent extends React.Component {\n    componentDidMount() {\n      const ritmOptionalTrackingIdentifier = this.props.trackingIdentifier; // TODO: Recreate group when this changes?\n      const filterOutTheseSelectors = this.props.filterOutTheseSelectors || '';\n\n      const text = () => getPlainTextWithPsuedoSemantics(this.wrapperElement, filterOutTheseSelectors);\n      this.ritmGroup = createRITMGroup(\n        {playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem: this.elem, ritmOptionalTrackingIdentifier, text},\n        {wrapperElement: this.wrapperElement, controlBubbleElement: this.controlBubbleElement}\n      );\n      this.ritmGroup.setReadItToMe(this.props.ritmState);\n\n      this.props.onGroupMounted();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.ritmState !== this.props.ritmState) {\n        this.ritmGroup.setReadItToMe(this.props.ritmState);\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.ritmGroup) {\n        this.ritmGroup.destroy();\n        this.ritmGroup = null;\n      }\n    }\n\n    render() {\n      return React.createElement('div', {className: groupClassName, ref: elem => this.elem = elem},\n        React.createElement('div', {ref: controlBubbleElement => this.controlBubbleElement = controlBubbleElement}),\n        React.createElement('div', {className: 'read-this-to-me', ref: wrapperElement => this.wrapperElement = wrapperElement}, this.props.children)\n      );\n    }\n  }\n}","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","import {PLAYING_STATE} from './utils';\n\nexport function createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, ritmOptionalTrackingIdentifier, elem, text}, {wrapperElement, controlBubbleElement, document}) {\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapper = wrapperElement || document.createElement('div');\n  wrapper.classList.add('read-this-to-me');\n\n  if (!wrapperElement) {\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n  }\n\n  // build the control bubble\n  const controlBubble = controlBubbleElement || document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const pausePlayButton = controlBubble.querySelector('button.play-pause-resume');\n  const cancelButton = controlBubble.querySelector('button.cancel-audio');\n\n  const focusInListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.add(focusClassName);\n  };\n\n  const focusOutListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.remove(focusClassName);\n  };\n\n  const playPauseListener = e => {\n    e.stopPropagation();\n    playPauseGroup(group);\n  };\n\n  const cancelListener = cancelAudio(controlBubble);\n\n  const setReadItToMe = enabled => {\n    if (enabled) {\n      elem.classList.remove(ritmDisabledClassName);\n    }\n    else {\n      elem.classList.add(ritmDisabledClassName);\n    }\n    pausePlayButton.disabled = !enabled;\n    cancelButton.disabled = !enabled;\n  };\n\n  const setState = state => {\n    group.state = state;\n\n    if (state === PLAYING_STATE.STOPPED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PLAYING) {\n      elem.classList.add('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PAUSED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.add('read-it-to-me-pause');\n    }\n  };\n\n  const destroy = () => {\n    controlBubble.removeEventListener('focusin', focusInListener);\n    controlBubble.removeEventListener('focusout', focusOutListener);\n    pausePlayButton.removeEventListener('click', playPauseListener);\n    cancelButton.removeEventListener('click', cancelListener);\n  };\n\n  controlBubble.addEventListener('focusin', focusInListener);\n  controlBubble.addEventListener('focusout', focusOutListener);\n  pausePlayButton.addEventListener('click', playPauseListener);\n  cancelButton.addEventListener('click', cancelListener);\n\n  if (!controlBubbleElement) {\n    elem.insertBefore(controlBubble, wrapper);\n  }\n\n  const group = {\n    setReadItToMe,\n    setState,\n    state: PLAYING_STATE.STOPPED,\n    destroy,\n    text,\n    ritmOptionalTrackingIdentifier\n  };\n\n  return group;\n}","import {playPauseGroup, cancelAudio, setReadItToMe} from './read-it-to-me';\nimport {createControlBar} from './control-bar';\nimport {createRITMGroup} from './group';\nimport {getPlainTextWithPsuedoSemantics, groupClassName, focusClassName, ritmDisabledClassName} from './utils';\n\nexport function init(initRITM, selectors, filterOutTheseSelectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  function setupUI() {\n    // if custom selectors were passed in, give the associated elements the default group class\n    if (selectors && document.querySelectorAll(selectors).length > 0) {\n      document.querySelectorAll(selectors).forEach((elem) => {\n        elem.classList.add(groupClassName);\n      });\n    }\n\n    let controlBar;\n    let contentGroups = [];\n\n    const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n    groupSelectorElements.forEach((elem) => {\n      const text = () => getPlainTextWithPsuedoSemantics(elem.querySelector('.read-this-to-me'), filterOutTheseSelectors);\n      const ritmOptionalTrackingIdentifier = elem.dataset.ritmOptionalTrackingIdentifier || false;\n      const group = createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem, ritmOptionalTrackingIdentifier, text}, {document});\n\n      contentGroups.push(group);\n    });\n\n    // build the control bar\n    controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n\n    function uiSetReadItToMe(enabled) {\n      controlBar.setReadItToMe(enabled);\n      contentGroups.forEach(group => group.setReadItToMe(enabled));\n    }\n\n    return {\n      hideControlBar: controlBar.hideControlBar,\n      hideCancelButton: controlBar.hideCancelButton,\n      showCancelButton: controlBar.showCancelButton,\n      showControlBar: controlBar.showControlBar,\n      setReadItToMe: uiSetReadItToMe\n    }\n  }\n\n  initRITM(setupUI, error => {\n    if (error) {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}","import '../scss/read-it-to-me.scss';\n\nimport * as ritm from './read-it-to-me';\nimport {init as domInit} from './dom';\nimport * as ritmReact from './react';\n\nexport const initRITM = ritm.init;\nexport const isEnabled = ritm.isEnabled;\nexport const currentUtteranceIdentifier = ritm.currentUtteranceIdentifier;\nexport const eventTracking = ritm.eventTracking;\n\nexport const ControlContext = ritmReact.ControlContext;\nexport const ContentGroup = ritmReact.ContentGroup;\n\nexport function init(selectors, filterOutTheseSelectors='') {\n  return domInit(ritm.init, selectors, filterOutTheseSelectors);\n}"],"names":["synth","ui","groupClassName","PLAYING_STATE","getPlainTextWithPsuedoSemantics","textAncestor","filterOutTheseSelectors","clonedTextAncestor","cloneNode","filterOutTheseSelectorsAndUI","querySelectorAll","forEach","elem","remove","altText","alt","length","replaceWith","tag","tagName","toUpperCase","appendChild","document","createTextNode","arr","textContent","split","join","insertBefore","firstChild","nullEvent","eventHandlerWrapper","handler","event","e","ritmEnabled","eventsBin","play","pause","cancel","toggle","setHandlers","obj","initEventTracking","setReadItToMe","enabled","logEvent","strayFocus","sessionStorage","removeItem","querySelector","classList","setItem","cancelAudio","toFocus","currentUtterance","config","group","ritmOptionalTrackingIdentifier","contains","this","focus","playPauseGroup","state","resume","text","playTracked","utteranceUpdated","setState","hideControlBar","hideCancelButton","showControlBar","showCancelButton","init","setupUI","callback","voices","failedToLoadVoices","speechSynthesis","playNextUtterance","thisUtterance","result","nextUttarance","utteranceFinished","error","u","onend","setTimeout","onerror","bind","Error","onstart","onpause","onresume","speak","SpeechSynthesisUtterance","lang","rate","i","indexOf","name","voice","getVoices","undefined","onvoiceschanged","initSynthesis","synthesis","getItem","isEnabled","ControlContext","ContentGroup","eventTracking","createControlBar","controlBarElement","controlBar","createElement","add","setAttribute","innerHTML","cancelButton","inputSwitch","addEventListener","target","checked","relatedTarget","docBody","body","status","createRITMGroup","focusClassName","ritmDisabledClassName","wrapperElement","controlBubbleElement","wrapper","controlBubble","tabIndex","pausePlayButton","focusInListener","stopPropagation","focusOutListener","playPauseListener","cancelListener","disabled","destroy","removeEventListener","initRITM","selectors","contentGroups","dataset","push","React","Context","createContext","Component","props","ritm","onGroupMounted","_this","initialized","_this2","uiSetReadItToMe","err","onPlay","onPause","onCancel","onToggle","arguments","console","Provider","value","children","componentRender","_this3","ritmState","ContentGroupComponent","Consumer","trackingIdentifier","ritmGroup","_this4","prevProps","prevState","snapshot","className","ref","_this5","currentUtteranceIdentifier","ritmReact","domInit"],"mappings":"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"}